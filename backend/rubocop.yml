inherit_from: .rubocop_todo.yml

require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec
  - './lib/rubo_cop/cop/dk'
  - './lib/rubo_cop/cop/payment_requests'

Rails:
  Enabled: true

AllCops:
  Exclude:
    - !ruby/regexp /\/db\/(?:(?!seeds.rb).)*$/
    - 'vendor/**/*'
    - 'bin/**/*'
    - 'node_modules/**/*'       # rubyコードが入っているライブラリがある
  TargetRubyVersion: 2.7

Layout/BeginEndAlignment:
  Description: 'Align ends corresponding to begins correctly.'
  Enabled: true
  # The value `start_of_line` means that `end` should be aligned the start of the line
  # where the `begin` keyword is.
  # The value `begin` means that `end` should be aligned with the `begin` keyword.
  EnforcedStyleAlignWith: start_of_line
  SupportedStylesAlignWith:
    - start_of_line
    - begin

Layout/DotPosition:
  Description: 'Checks the position of the dot in multi-line method calls.'
  StyleGuide: '#consistent-multi-line-chains'
  Enabled: true
  EnforcedStyle: trailing

Layout/EmptyLinesAroundAttributeAccessor:
  Description: "Keep blank lines around attribute accessors."
  StyleGuide: '#empty-lines-around-attribute-accessor'
  Enabled: true
  AllowAliasSyntax: true
  AllowedMethods:
    - alias_method
    - public
    - protected
    - private

Layout/ExtraSpacing:
  Description: 'Do not use unnecessary spacing.'
  Enabled: true

Layout/MultilineOperationIndentation:
  Description: >-
                 Checks indentation of binary operations that span more than
                 one line.
  Enabled: true
  EnforcedStyle: indented

Layout/InitialIndentation:
  Description: >-
    Checks the indentation of the first non-blank non-comment line in a file.
  Enabled: false

Layout/LineLength:
  Description: 'Limit lines to 80 characters.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#80-character-limits'
  Enabled: false

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented
  IndentationWidth: 2

Layout/SpaceAroundMethodCallOperator:
  Description: 'Checks method call operators to not have spaces around them.'
  Enabled: true

Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: false

Style/Alias:
  Description: 'Use alias_method instead of alias.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#alias-method'
  Enabled: false

Style/ArrayJoin:
  Description: 'Use Array#join instead of Array#*.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#array-join'
  Enabled: false

Style/AsciiComments:
  Description: 'Use only ascii symbols in comments.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#english-comments'
  Enabled: false

Naming/AsciiIdentifiers:
  Description: 'Use only ascii symbols in identifiers.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#english-identifiers'
  Enabled: false

Style/Attr:
  Description: 'Checks for uses of Module#attr.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#attr'
  Enabled: false

Metrics/BlockNesting:
  Description: 'Avoid excessive block nesting'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#three-is-the-number-thou-shalt-count'
  Enabled: false

Style/CaseEquality:
  Description: 'Avoid explicit use of the case equality operator(===).'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-case-equality'
  Enabled: false

Style/CharacterLiteral:
  Description: 'Checks for uses of character literals.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-character-literals'
  Enabled: false

Style/ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'
  Enabled: true
  EnforcedStyle: nested

Metrics/ClassLength:
  Description: 'Avoid classes longer than 100 lines of code.'
  Enabled: false

Metrics/ModuleLength:
  Description: 'Avoid modules longer than 100 lines of code.'
  Enabled: false

Style/ClassVars:
  Description: 'Avoid the use of class variables.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-class-vars'
  Enabled: false

Style/CollectionMethods:
  Enabled: true
  PreferredMethods:
    find: detect
    inject: reduce
    collect: map
    find_all: select

Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#double-colons'
  Enabled: false

Style/CommentAnnotation:
  Description: >-
                 Checks formatting of special comments
                 (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#annotate-keywords'
  Enabled: false

Style/CommandLiteral:
  Enabled: true
  EnforcedStyle: percent_x

Metrics/CyclomaticComplexity:
  Description: >-
                 A complexity metric that is strongly correlated to the number
                 of test cases needed to validate a method.
  Enabled: false

Rails/Delegate:
  Description: 'Prefer delegate method for delegations.'
  Enabled: false

Rails/HasManyOrHasOneDependent:
  Enabled: false

Style/PreferredHashMethods:
  Description: 'Checks use of `has_key?` and `has_value?` Hash methods.'
  StyleGuide: '#hash-key'
  Enabled: false

Style/Documentation:
  Description: 'Document classes and non-namespace modules.'
  Enabled: false

Style/DoubleNegation:
  Description: 'Checks for uses of double negation (!!).'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-bang-bang'
  Enabled: false

Style/EachWithObject:
  Description: 'Prefer `each_with_object` over `inject` or `reduce`.'
  Enabled: false

Style/EmptyElse:
  Enabled: true

Style/EmptyLiteral:
  Description: 'Prefer literals to Array.new/Hash.new/String.new.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#literal-array-hash'
  Enabled: false

# Checks whether the source file has a utf-8 encoding comment or not
# AutoCorrectEncodingComment must match the regex
# /#.*coding\s?[:=]\s?(?:UTF|utf)-8/
Style/Encoding:
  Enabled: false

Style/EvenOdd:
  Description: 'Favor the use of Fixnum#even? && Fixnum#odd?'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#predicate-methods'
  Enabled: false

Naming/FileName:
  Description: 'Use snake_case for source file names.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#snake-case-files'
  Enabled: false

Lint/FlipFlop:
  Description: 'Checks for flip flops'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-flip-flops'
  Enabled: false

Style/FormatString:
  Description: 'Enforce the use of Kernel#sprintf, Kernel#format or String#%.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#sprintf'
  Enabled: false

Style/FormatStringToken:
  Enabled: false

Style/GlobalVars:
  Description: 'Do not introduce global variables.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#instance-vars'
  Reference: 'http://www.zenspider.com/Languages/Ruby/QuickRef.html'
  Enabled: false

Style/GuardClause:
  Description: 'Check for conditionals that can be replaced with guard clauses'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals'
  Enabled: false

Style/HashSyntax:
  Enabled: true

Style/IfUnlessModifier:
  Description: >-
                 Favor modifier if/unless usage when you have a
                 single-line body.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#if-as-a-modifier'
  Enabled: false

Style/IfWithSemicolon:
  Description: 'Do not use if x; .... Use the ternary operator instead.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-semicolon-ifs'
  Enabled: false

Style/InlineComment:
  Description: 'Avoid inline comments.'
  Enabled: false

Style/InverseMethods:
  Enabled: true

Style/Lambda:
  Description: 'Use the new lambda literal syntax for single-line blocks.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#lambda-multi-line'
  Enabled: false

Style/LambdaCall:
  Description: 'Use lambda.call(...) instead of lambda.(...).'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#proc-call'
  Enabled: false

Style/LineEndConcatenation:
  Description: >-
                 Use \ instead of + or << to concatenate two string literals at
                 line end.
  Enabled: false

Metrics/MethodLength:
  Description: 'Avoid methods longer than 10 lines of code.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#short-methods'
  Enabled: false

Style/ModuleFunction:
  Description: 'Checks for usage of `extend self` in modules.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#module-function'
  Enabled: false

Style/NegatedIf:
  Description: >-
                 Favor unless over if for negative conditions
                 (or control flow or).
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#unless-for-negatives'
  Enabled: false

Style/NegatedWhile:
  Description: 'Favor until over while for negative conditions.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#until-for-negatives'
  Enabled: false

Style/Next:
  Description: 'Use `next` to skip iteration instead of a condition at the end.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals'
  Enabled: false

Style/NilComparison:
  Description: 'Prefer x.nil? to x == nil.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#predicate-methods'
  Enabled: false

Style/Not:
  Description: 'Use ! instead of not.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#bang-not-not'
  Enabled: false

Style/NumericLiteralPrefix:
  Enabled: true

Style/NumericLiterals:
  Description: >-
                 Add underscores to large numeric literals to improve their
                 readability.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#underscores-in-numerics'
  Enabled: false

Style/OneLineConditional:
  Description: >-
                 Favor the ternary operator(?:) over
                 if/then/else/end constructs.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#ternary-operator'
  Enabled: false

Naming/BinaryOperatorParameterName:
  Description: 'When defining binary operators, name the argument other.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#other-arg'
  Enabled: false

Metrics/ParameterLists:
  Description: 'Avoid parameter lists longer than three or four parameters.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#too-many-params'
  Enabled: false

Style/PercentLiteralDelimiters:
  Description: 'Use `%`-literal delimiters consistently'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#percent-literal-braces'
  Enabled: false

Style/PerlBackrefs:
  Description: 'Avoid Perl-style regex back references.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-perl-regexp-last-matchers'
  Enabled: false

Naming/PredicateName:
  Description: 'Check the names of predicate methods.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#bool-methods-qmark'
  Enabled: true
  ForbiddenPrefixes:
    - is_
  Exclude:
    - spec/**/*

Style/Proc:
  Description: 'Use proc instead of Proc.new.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#proc'
  Enabled: false

Style/RaiseArgs:
  Description: 'Checks the arguments passed to raise/fail.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#exception-class-messages'
  Enabled: true
  EnforcedStyle: exploded

Style/RegexpLiteral:
  Description: 'Use / or %r around regular expressions.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#percent-r'
  Enabled: false

Style/SelfAssignment:
  Description: >-
                 Checks for places where self-assignment shorthand should have
                 been used.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#self-assignment'
  Enabled: false

Style/Semicolon:
  Enabled: true

Style/SingleLineBlockParams:
  Description: 'Enforces the names of some block params.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#reduce-blocks'
  Enabled: false

Style/SingleLineMethods:
  Description: 'Avoid single-line methods.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-single-line-methods'
  Enabled: false

Style/SignalException:
  Description: 'Checks for proper usage of fail and raise.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#fail-method'
  Enabled: true
  EnforcedStyle: only_raise

Style/SpecialGlobalVars:
  Description: 'Avoid Perl-style global variables.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-cryptic-perlisms'
  Enabled: false

Style/StringLiterals:
  Description: 'Checks if uses of quotes match the configured preference.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#consistent-string-literals'
  EnforcedStyle: single_quotes
  Enabled: true

Style/SymbolArray:
  Enabled: true

Style/SymbolProc:
  Enabled: true

Style/TrailingCommaInHashLiteral:
  EnforcedStyleForMultiline: comma
  Enabled: true

Style/TrailingCommaInArguments:
  Description: 'Checks for trailing comma in parameter lists and literals.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-trailing-array-commas'
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - no_comma
  Enabled: true

Style/TrailingCommaInArrayLiteral:
  Description: 'Checks for trailing comma in parameter lists and literals.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-trailing-array-commas'
  EnforcedStyleForMultiline: comma
  SupportedStylesForMultiline:
    - comma
    - no_comma
  Enabled: true

Style/TrivialAccessors:
  Description: 'Prefer attr_* methods to trivial readers/writers.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#attr_family'
  Enabled: false

Style/VariableInterpolation:
  Description: >-
                 Don't interpolate global, instance and class variables
                 directly in strings.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#curlies-interpolate'
  Enabled: false

Style/WhenThen:
  Description: 'Use when x then ... for one-line cases.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#one-line-cases'
  Enabled: false

Style/WhileUntilModifier:
  Description: >-
                 Favor modifier while/until usage when you have a
                 single-line body.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#while-as-a-modifier'
  Enabled: false

Style/WordArray:
  Description: 'Use %w or %W for arrays of words.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#percent-w'
  Enabled: false

Style/HashLikeCase:
  Description: 'This cop checks for places where case-when represents a simple 1:1 mapping and can be replaced with a hash lookup.'
  StyleGuide: 'https://docs.rubocop.org/rubocop/cops_style.html#stylehashlikecase'
  Enabled: false

# Lint

Lint/AmbiguousBlockAssociation:
  Enabled: true

Lint/AmbiguousOperator:
  Description: >-
                 Checks for ambiguous operators in the first argument of a
                 method invocation without parentheses.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#parens-as-args'
  Enabled: false

Lint/AmbiguousRegexpLiteral:
  Description: >-
                 Checks for ambiguous regexp literals in the first argument of
                 a method invocation without parenthesis.
  Enabled: false

Lint/AssignmentInCondition:
  Description: "Don't use assignment in conditions."
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#safe-assignment-in-condition'
  Enabled: false

Lint/BinaryOperatorWithIdenticalOperands:
  Description: 'This cop checks for places where binary operator has identical operands.'
  Enabled: true
  Safe: false

Lint/BooleanSymbol:
  Enabled: true

Lint/CircularArgumentReference:
  Description: "Don't refer to the keyword argument in the default value."
  Enabled: false

Layout/ConditionPosition:
  Description: >-
                 Checks for condition placed in a confusing position relative to
                 the keyword.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#same-line-condition'
  Enabled: false

Lint/ConstantDefinitionInBlock:
  Description: 'Do not define constants within a block.'
  StyleGuide: '#no-constant-definition-in-block'
  Enabled: true

Lint/DeprecatedClassMethods:
  Description: 'Check for deprecated class method calls.'
  Enabled: false

Lint/DeprecatedOpenSSLConstant:
  Description: "Don't use algorithm constants for `OpenSSL::Cipher` and `OpenSSL::Digest`."
  Enabled: true

Lint/DuplicateElsifCondition:
  Description: 'Do not repeat conditions used in if `elsif`.'
  Enabled: true

Lint/DuplicateHashKey:
  Description: 'Check for duplicate keys in hash literals.'
  Enabled: true

Lint/DuplicateRequire:
  Description: 'Check for duplicate `require`s and `require_relative`s.'
  Enabled: true

Lint/DuplicateRescueException:
  Description: 'Checks that there are no repeated exceptions used in `rescue` expressions.'
  Enabled: true

Lint/EachWithObjectArgument:
  Description: 'Check for immutable argument given to each_with_object.'
  Enabled: false

Lint/ElseLayout:
  Description: 'Check for odd code arrangement in an else block.'
  Enabled: false

Lint/EmptyConditionalBody:
  Description: 'This cop checks for the presence of `if`, `elsif` and `unless` branches without a body.'
  Enabled: true
  AllowComments: true

Lint/EmptyFile:
  Description: 'Enforces that Ruby source files are not empty.'
  Enabled: true
  AllowComments: true

Lint/FloatComparison:
  Description: 'Checks for the presence of precise comparison of floating point numbers.'
  StyleGuide: '#float-comparison'
  Enabled: true

Lint/FormatParameterMismatch:
  Description: 'The number of parameters to format/sprint must match the fields.'
  Enabled: false

Lint/IdentityComparison:
  Description: 'Prefer `equal?` over `==` when comparing `object_id`.'
  Enabled: true
  StyleGuide: '#identity-comparison'

Lint/LiteralAsCondition:
  Description: 'Checks of literals used in conditions.'
  Enabled: false

Lint/LiteralInInterpolation:
  Description: 'Checks for literals used in interpolation.'
  Enabled: false

Lint/Loop:
  Description: >-
                 Use Kernel#loop with break rather than begin/end/until or
                 begin/end/while for post-loop tests.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#loop-with-break'
  Enabled: false

Lint/MissingSuper:
  Description: >-
                  This cop checks for the presence of constructors and lifecycle callbacks
                  without calls to `super`'.
  Enabled: true

Lint/MixedRegexpCaptureTypes:
  Description: 'Do not mix named captures and numbered captures in a Regexp literal.'
  Enabled: true

Lint/NestedMethodDefinition:
  Description: 'Do not use nested method definitions.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#no-nested-methods'
  Enabled: false

Lint/NonDeterministicRequireOrder:
  Description: 'Always sort arrays returned by Dir.glob when requiring files.'
  Enabled: true
  Safe: false

Lint/NonLocalExitFromIterator:
  Description: 'Do not use return in iterator to cause non-local exit.'
  Enabled: false

Lint/OutOfRangeRegexpRef:
  Description: 'Checks for out of range reference for Regexp because it always returns nil.'
  Enabled: true
  Safe: false

Lint/ParenthesesAsGroupedExpression:
  Description: >-
                 Checks for method calls with a space before the opening
                 parenthesis.
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#parens-no-spaces'
  Enabled: false

Lint/RaiseException:
  Description: Checks for `raise` or `fail` statements which are raising `Exception` class.
  StyleGuide: '#raise-exception'
  Enabled: true
  Safe: false
  AllowedImplicitNamespaces:
    - 'Gem'

Lint/RedundantCopDisableDirective:
  Description: >-
                 Checks for rubocop:disable comments that can be removed.
                 Note: this cop is not disabled when disabling all cops.
                 It must be explicitly disabled.
  Enabled: false

Lint/RequireParentheses:
  Description: >-
                 Use parentheses in the method call to avoid confusion
                 about precedence.
  Enabled: false

Lint/SelfAssignment:
  Description: 'Checks for self-assignments.'
  Enabled: true

Lint/StructNewOverride:
  Description: 'Disallow overriding the `Struct` built-in methods via `Struct.new`.'
  Enabled: true

Lint/SuppressedException:
  Description: "Don't suppress exception."
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#dont-hide-exceptions'
  Enabled: true

Lint/TopLevelReturnWithArgument:
  Description: 'This cop detects top level return statements with argument.'
  Enabled: true

Lint/TrailingCommaInAttributeDeclaration:
  Description: 'This cop checks for trailing commas in attribute declarations.'
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Description: 'Do not use prefix `_` for a variable that is used.'
  Enabled: false

Lint/UnreachableLoop:
  Description: 'This cop checks for loops that will have at most one iteration.'
  Enabled: true

Lint/UselessMethodDefinition:
  Description: 'Checks for useless method definitions.'
  Enabled: true
  Safe: false
  AllowComments: true

Lint/UselessTimes:
  Description: 'Checks for useless `Integer#times` calls.'
  Enabled: true
  Safe: false

Lint/Void:
  Description: 'Possible use of operator/literal/variable in void context.'
  Enabled: false

# Performance

Performance/AncestorsInclude:
  Description: 'Use `A <= B` instead of `A.ancestors.include?(B)`.'
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#ancestorsinclude-vs--code'
  Enabled: true
  Safe: false

Performance/BigDecimalWithNumericArgument:
  Description: 'Convert numeric argument to string before passing to BigDecimal.'
  Enabled: true

Performance/CaseWhenSplat:
  Description: >-
                  Place `when` conditions that use splat at the end
                  of the list of `when` branches.
  Enabled: false

Performance/CollectionLiteralInLoop:
  Description: 'Extract Array and Hash literals outside of loops into local variables or constants.'
  Enabled: true
  # Min number of elements to consider an offense
  MinSize: 1

Performance/Count:
  Description: >-
                  Use `count` instead of `select...size`, `reject...size`,
                  `select...count`, `reject...count`, `select...length`,
                  and `reject...length`.
  Enabled: false

Performance/Detect:
  Description: >-
                  Use `detect` instead of `select.first`, `find_all.first`,
                  `select.last`, and `find_all.last`.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code'
  Enabled: false

Performance/FlatMap:
  Description: >-
                  Use `Enumerable#flat_map`
                  instead of `Enumerable#map...Array#flatten(1)`
                  or `Enumberable#collect..Array#flatten(1)`
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code'
  Enabled: false

Performance/RedundantSortBlock:
  Description: 'Use `sort` instead of `sort { |a, b| a <=> b }`.'
  Enabled: true

Performance/RedundantStringChars:
  Description: 'Checks for redundant `String#chars`.'
  Enabled: true

Performance/ReverseEach:
  Description: 'Use `reverse_each` instead of `reverse.each`.'
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code'
  Enabled: false

Performance/ReverseFirst:
  Description: 'Use `last(n).reverse` instead of `reverse.first(n)`.'
  Enabled: true

Style/Sample:
  Description: >-
                  Use `sample` instead of `shuffle.first`,
                  `shuffle.last`, and `shuffle[Fixnum]`.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code'
  Enabled: false

Performance/Size:
  Description: >-
                  Use `size` instead of `count` for counting
                  the number of elements in `Array` and `Hash`.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#arraycount-vs-arraysize-code'
  Enabled: false

Performance/SortReverse:
  Description: 'Use `sort.reverse` instead of `sort { |a, b| b <=> a }`.'
  Enabled: true

Performance/Squeeze:
  Description: "Use `squeeze('a')` instead of `gsub(/a+/, 'a')`."
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#remove-extra-spaces-or-other-contiguous-characters-code'
  Enabled: true

Performance/StringInclude:
  Description: 'Use `String#include?` instead of a regex match with literal-only pattern.'
  Enabled: true
  AutoCorrect: false
  SafeAutoCorrect: false

Performance/StringReplacement:
  Description: >-
                  Use `tr` instead of `gsub` when you are replacing the same
                  number of characters. Use `delete` instead of `gsub` when
                  you are deleting characters.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code'
  Enabled: false

Performance/Sum:
  Description: 'Use `sum` instead of a custom array summation.'
  Reference: 'https://blog.bigbinary.com/2016/11/02/ruby-2-4-introduces-enumerable-sum.html'
  Enabled: true

# Rails

Rails/ActiveRecordCallbacksOrder:
  Description: 'Order callback declarations in the order in which they will be executed.'
  StyleGuide: 'https://rails.rubystyle.guide/#callbacks-order'
  Enabled: true
  Include:
    - app/models/**/*.rb

Rails/ActionFilter:
  Description: 'Enforces consistent use of action filter methods.'
  Enabled: false

Rails/ActiveRecordAliases:
  Enabled: true

Rails/AfterCommitOverride:
  Description: >-
                  This cop enforces that there is only one call to `after_commit`
                  (and its aliases - `after_create_commit`, `after_update_commit`,
                  and `after_destroy_commit`) with the same callback name per model.
  Enabled: true

Rails/ApplicationController:
  Description: 'Check that controllers subclass ApplicationController.'
  Enabled: true
  SafeAutoCorrect: false

Rails/Date:
  Description: >-
                  Checks the correct usage of date aware methods,
                  such as Date.today, Date.current etc.
  Enabled: false

Rails/DynamicFindBy:
  Enabled: true

Rails/FilePath:
  Enabled: true
  EnforcedStyle: arguments

Rails/FindBy:
  Description: 'Prefer find_by over where.first.'
  Enabled: false

Rails/FindById:
  Description: >-
                Favor the use of `find` over `where.take!`, `find_by!`, and `find_by_id!` when you
                need to retrieve a single record by primary key when you expect it to be found.
  StyleGuide: 'https://rails.rubystyle.guide/#find'
  Enabled: false

Rails/FindEach:
  Description: 'Prefer all.find_each over all.find.'
  Enabled: false

Rails/HasAndBelongsToMany:
  Description: 'Prefer has_many :through to has_and_belongs_to_many.'
  Enabled: false

Rails/IndexBy:
  Description: 'Prefer `index_by` over `each_with_object`, `to_h`, or `map`.'
  Enabled: true

Rails/Inquiry:
  Description: "Prefer Ruby's comparison operators over Active Support's `Array#inquiry` and `String#inquiry`."
  StyleGuide: 'https://rails.rubystyle.guide/#inquiry'
  Enabled: true

Rails/MailerName:
  Description: 'Mailer should end with `Mailer` suffix.'
  StyleGuide: 'https://rails.rubystyle.guide/#mailer-name'
  Enabled: true
  SafeAutoCorrect: false
  Include:
    - app/mailers/**/*.rb

Rails/MatchRoute:
  Description: >-
                  Don't use `match` to define any routes unless there is a need to map multiple request types
                  among [:get, :post, :patch, :put, :delete] to a single action using the `:via` option.
  StyleGuide: 'https://rails.rubystyle.guide/#no-match-routes'
  Enabled: true
  Include:
    - config/routes.rb
    - config/routes/**/*.rb

Rails/NegateInclude:
  Description: 'Prefer `collection.exclude?(obj)` over `!collection.include?(obj)`.'
  StyleGuide: 'https://rails.rubystyle.guide#exclude'
  Enabled: true

Rails/Output:
  Description: 'Checks for calls to puts, print, etc.'
  Enabled: false

Rails/Pluck:
  Description: 'Prefer `pluck` over `map { ... }`.'
  StyleGuide: 'https://rails.rubystyle.guide#pluck'
  Enabled: true

Rails/PluckInWhere:
  Description: 'Use `select` instead of `pluck` in `where` query methods.'
  Enabled: true
  Safe: false
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive

Rails/Presence:
  Enabled: true

Rails/RedundantForeignKey:
  Description: 'Checks for associations where the `:foreign_key` option is redundant.'
  Enabled: true

Rails/RenderInline:
  Description: 'Prefer using a template over inline rendering.'
  StyleGuide: 'https://rails.rubystyle.guide/#inline-rendering'
  Enabled: true

Rails/RenderPlainText:
  Description: 'Prefer `render plain:` over `render text:`.'
  StyleGuide: 'https://rails.rubystyle.guide/#plain-text-rendering'
  Enabled: true
  # Convert only when `content_type` is explicitly set to `text/plain`.
  ContentTypeCompatibility: true

Rails/ReadWriteAttribute:
  Description: >-
                 Checks for read_attribute(:attr) and
                 write_attribute(:attr, val).
  Enabled: false

Rails/SafeNavigation:
  Enabled: true

Rails/ScopeArgs:
  Description: 'Checks the arguments of ActiveRecord scopes.'
  Enabled: false

Rails/ShortI18n:
  Description: 'Use the short form of the I18n methods: `t` instead of `translate` and `l` instead of `localize`.'
  StyleGuide: 'https://rails.rubystyle.guide/#short-i18n'
  Enabled: true
  EnforcedStyle: conservative
  SupportedStyles:
    - conservative
    - aggressive

Rails/SquishedSQLHeredocs:
  Description: 'Checks SQL heredocs to use `.squish`.'
  StyleGuide: 'https://rails.rubystyle.guide/#squished-heredocs'
  # 誤検出が多いのでfalse
  Enabled: false

Rails/TimeZone:
  Description: 'Checks the correct usage of time zone aware methods.'
  StyleGuide: 'https://github.com/bbatsov/rails-style-guide#time'
  Reference: 'http://danilenko.org/2012/7/6/rails_timezones'
  Enabled: true

Rails/Validation:
  Description: 'Use validates :attribute, hash of validations.'
  Enabled: false

Rails/WhereExists:
  Description: 'Prefer `exists?(...)` over `where(...).exists?`.'
  Enabled: true
  EnforcedStyle: exists
  SupportedStyles:
    - exists
    - where

Rails/WhereNot:
  Description: 'Use `where.not(...)` instead of manually constructing negated SQL in `where`.'
  StyleGuide: 'https://rails.rubystyle.guide/#hash-conditions'
  Enabled: false # SQLに影響が出ること、必ずしもSQLの可読性が上がるわけでもないことを考慮し、意図的に無効にする

RSpec/AnyInstance:
  Enabled: true

RSpec/AroundBlock:
  Enabled: false

RSpec/Be:
  Enabled: false

RSpec/BeEql:
  Enabled: true

RSpec/BeforeAfterAll:
  Enabled: false

RSpec/ContextWording:
  Enabled: false

RSpec/DescribedClass:
  Enabled: false

RSpec/DescribeClass:
  Enabled: true

RSpec/EmptyExampleGroup:
  Enabled: false

RSpec/EmptyLineAfterFinalLet:
  Enabled: false

RSpec/EmptyLineAfterHook:
  Enabled: true

RSpec/EmptyLineAfterSubject:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

RSpec/ExampleWording:
  Enabled: true

RSpec/ExpectChange:
  Enabled: true

RSpec/ExpectInHook:
  Enabled: false

RSpec/FilePath:
  Enabled: true

RSpec/HookArgument:
  Enabled: false

RSpec/ImplicitExpect: # is_expected.toかshouldのどちらかに矯正できるcop
  Enabled: false

RSpec/ImplicitSubject:
  Enabled: false

RSpec/InstanceVariable:
  Enabled: true

RSpec/LeadingSubject: # subjectを先頭に書くcop
  Enabled: true

RSpec/LeakyConstantDeclaration:
  Enabled: true

RSpec/LetBeforeExamples: # describe, contextなどの前にletを書くcop
  Enabled: true

RSpec/LetSetup:
  Enabled: false

RSpec/MessageChain:
  Enabled: true

RSpec/MessageExpectation:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/MissingExampleGroupArgument:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/MultipleMemoizedHelpers:
  Enabled: false

RSpec/NamedSubject:
  Enabled: false

RSpec/NestedGroups:
  Enabled: false

RSpec/NotToNot:
  Enabled: true

RSpec/OverwritingSetup:
  Enabled: true

RSpec/PredicateMatcher:
  Enabled: true

RSpec/ReceiveCounts:
  Enabled: false

RSpec/RepeatedExampleGroupBody:
  Enabled: false

RSpec/RepeatedExampleGroupDescription:
  Enabled: false

RSpec/ScatteredLet:
  Enabled: false

RSpec/SubjectStub:
  Enabled: false

RSpec/VariableName:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false

# その他

Metrics/AbcSize:
  Enabled: false

Style/AccessorGrouping:
  Description: 'Checks for grouping of accessors in `class` and `module` bodies.'
  Enabled: true
  EnforcedStyle: grouped
  SupportedStyles:
    # separated: each accessor goes in a separate statement.
    # grouped: accessors are grouped into a single statement.
    - separated
    - grouped

Style/AndOr:
  EnforcedStyle: conditionals
  SupportedStyles:
    - always
    - conditionals

Style/BisectedAttrAccessor:
  Description: >-
                Checks for places where `attr_reader` and `attr_writer`
                for the same method can be combined into single `attr_accessor`.
  Enabled: true

Style/BlockDelimiters:
  Description: >-
                  Use braces around functional blocks, where the primary
                  purpose of the block is to return a value and
                  do..end for procedural blocks
  EnforcedStyle: semantic
  Enabled: true
  AllowBracesOnProceduralOneLiners: true
  FunctionalMethods:
    # default
    - let
    - let!
    - subject
    - watch
    # 追加
    - let_it_be
  Exclude:
    - 'spec/factory_bots/**/*' # factoryでは無視する

Style/CaseLikeIf:
  Description: 'This cop identifies places where `if-elsif` constructions can be replaced with `case-when`.'
  StyleGuide: '#case-vs-if-else'
  Enabled: true
  Safe: false

Style/CombinableLoops:
  Description: >-
                  Checks for places where multiple consecutive loops over the same data
                  can be combined into a single loop.
  Enabled: true
  Safe: false

Style/ExplicitBlockArgument:
  Description: >-
                  Consider using explicit block argument to avoid writing block literal
                  that just passes its arguments to another block.
  StyleGuide: '#block-argument'
  Enabled: true
  # May change the yielding arity.
  Safe: false

Style/ExponentialNotation:
  Description: 'When using exponential notation, favor a mantissa between 1 (inclusive) and 10 (exclusive).'
  StyleGuide: '#exponential-notation'
  Enabled: true
  EnforcedStyle: scientific
  SupportedStyles:
    - scientific
    - engineering
    - integral

Style/GlobalStdStream:
  Description: 'Enforces the use of `$stdout/$stderr/$stdin` instead of `STDOUT/STDERR/STDIN`.'
  StyleGuide: '#global-stdout'
  Enabled: true
  SafeAutoCorrect: false

Style/HashAsLastArrayItem:
  Description: >-
                 Checks for presence or absence of braces around hash literal as a last
                 array item depending on configuration.
  StyleGuide: '#hash-literal-as-last-array-item'
  Enabled: true
  EnforcedStyle: braces
  SupportedStyles:
    - braces
    - no_braces

Style/HashEachMethods:
  Description: 'Use Hash#each_key and Hash#each_value.'
  StyleGuide: '#hash-each'
  Enabled: true
  Safe: false

Style/HashTransformKeys:
  Description: 'Prefer `transform_keys` over `each_with_object`, `map`, or `to_h`.'
  Enabled: true
  Safe: false

Style/HashTransformValues:
  Description: 'Prefer `transform_values` over `each_with_object`, `map`, or `to_h`.'
  Enabled: true
  Safe: false

Style/KeywordParametersOrder:
  Description: 'Enforces that optional keyword parameters are placed at the end of the parameters list.'
  StyleGuide: '#keyword-parameters-order'
  Enabled: true

Style/OptionalBooleanParameter:
  Description: 'Use keyword arguments when defining method with boolean argument.'
  StyleGuide: '#boolean-keyword-arguments'
  Enabled: false
  Safe: false
  AllowedMethods:
    - respond_to_missing?

Style/RedundantAssignment:
  Description: 'Checks for redundant assignment before returning.'
  Enabled: true

Style/RedundantBegin:
  Enabled: false

Style/RedundantFetchBlock:
  Description: >-
                  Use `fetch(key, value)` instead of `fetch(key) { value }`
                  when value has Numeric, Rational, Complex, Symbol or String type, `false`, `true`, `nil` or is a constant.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#hashfetch-with-argument-vs-hashfetch--block-code'
  Enabled: true
  Safe: false
  # If enabled, this cop will autocorrect usages of
  # `fetch` being called with block returning a constant.
  # This can be dangerous since constants will not be defined at that moment.
  SafeForConstants: false

Style/RedundantFileExtensionInRequire:
  Description: >-
                  Checks for the presence of superfluous `.rb` extension in
                  the filename provided to `require` and `require_relative`.
  StyleGuide: '#no-explicit-rb-to-require'
  Enabled: true

Style/RedundantRegexpCharacterClass:
  Description: 'Checks for unnecessary single-element Regexp character classes.'
  Enabled: true

Style/RedundantRegexpEscape:
  Description: 'Checks for redundant escapes in Regexps.'
  Enabled: true

Style/RedundantReturn:
  Enabled: true

Style/RedundantSelfAssignment:
  Description: 'Checks for places where redundant assignments are made for in place modification methods.'
  Enabled: true
  Safe: false

Style/SingleArgumentDig:
  Description: 'Avoid using single argument dig method.'
  Enabled: true
  Safe: false

Style/SlicingWithRange:
  Description: 'Checks array slicing is done with endless ranges when suitable.'
  Enabled: true
  Safe: false

Style/SoleNestedConditional:
  Description: >-
                  Finds sole nested conditional nodes
                  which can be merged into outer conditional node.
  Enabled: true
  AllowModifier: true

#Style/StringConcatenation:
#  Description: 'Checks for places where string concatenation can be replaced with string interpolation.'
#  StyleGuide: '#string-interpolation'
#  Enabled: true
#  Safe: false

Metrics/PerceivedComplexity:
  Enabled: false

Style/MultilineBlockChain:
  Description: 'Avoid multi-line chains of blocks.'
  StyleGuide: '#single-line-blocks'
  Enabled: false

Metrics/BlockLength:
  Enabled: true
#  Max: 30
  Exclude:
    - 'app/models/concerns/*' # moduleなので長くても良さそう
    - 'config/**/*' # 設定なので長くても良さそう
    - 'db/migrate/*' # 設定なので長くても良さそう
    - 'spec/**/*' # describe, contextは長くても良さそう

Style/NumericPredicate:
  Enabled: false

Style/ZeroLengthPredicate:
  Enabled: false

Style/MissingRespondToMissing:
  Enabled: false

Style/RedundantInterpolation:
  Enabled: true

Style/RedundantSort:
  Enabled: true

Lint/UnusedBlockArgument:
  Enabled: true

Style/MultilineTernaryOperator:
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Enabled: true

Security/Open:
  Enabled: true

Security/YAMLLoad:
  Enabled: true

Lint/RedundantSplatExpansion:
  Enabled: true

Style/MutableConstant:
  Enabled: true

Style/RescueStandardError:
  Enabled: true

Style/MultilineIfModifier:
  Enabled: true

Style/RedundantSelf:
  Enabled: true

Style/EmptyMethod:
  Enabled: true

Style/EmptyCaseCondition:
  Enabled: true

Style/EmptyLambdaParameter:
  Enabled: true

Security/JSONLoad:
  Enabled: true

Style/ConditionalAssignment:
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Enabled: true

Style/RedundantFreeze:
  Enabled: true

Lint/IneffectiveAccessModifier:
  Enabled: true

Style/ExpandPathArguments:
  Enabled: true

Style/MultipleComparison:
  Enabled: true

Style/RedundantParentheses:
  Enabled: true

Lint/EmptyWhen:
  Enabled: true

Rails/Present:
  Enabled: true

Style/CommentedKeyword:
  Enabled: true

