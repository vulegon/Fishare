module TestData
  class FishLoader
    FISHES = [
      "アブラハヤ",
      "オイカワ",
      "カマツカ",
      "カジカ",
      "ウグイ",
      "ヤツメウナギ",
      "ドジョウ",
      "ナマズ",
      "アメマス",
      "オショロコマ",
      "イトウ",
      "サクラマス",
      "ヒメマス",
      "イワナ",
      "ゴギ",
      "アユカケ",
      "カワムツ",
      "ギンブナ",
      "モツゴ",
      "ニゴイ",
      "フナ",
      "コイ",
      "レンギョ",
      "ハクレン",
      "アブラボテ",
      "ゼゼラ",
      "カワヒガイ",
      "タナゴ",
      "カワヨシノボリ",
      "トミヨ",
      "ヨシノボリ",
      "サクラマス",
      "スモールマウスバス",
      "ラージマウスバス",
      "ブラックバス",
      "ティラピア",
      "ワカサギ",
      "ニシキゴイ",
      "ゴリ",
      "テツボウ",
      "トビハゼ",
      "シロウオ",
      "イタセンパラ",
      "アカヒレタビラ",
      "タカハヤ",
      "アカザ",
      "カマキリ",
      "ウシガエル",
      "ドンコ",
      "カミツキガメ",
      "カワエビ",
      "エビガニ",
      "モクズガニ",
      "ナガレホトケドジョウ",
      "アイナメ",
      "イシナギ",
      "ウマヅラハギ",
      "オオニベ",
      "カナガシラ",
      "カンダイ",
      "キダイ",
      "キビナゴ",
      "クエ",
      "コチ",
      "ゴマサバ",
      "サヨリ",
      "シマイサキ",
      "スズキ",
      "セイゴ",
      "タチウオ",
      "ツバクロエイ",
      "デンキナマズ",
      "トラフグ",
      "ハチビキ",
      "ハナダイ",
      "ハマチ",
      "ヒメマス",
      "ビワマス",
      "フエフキダイ",
      "ベラ",
      "ホウライヒメジ",
      "ホッケ",
      "マアジ",
      "マダコ",
      "ミシマオコゼ",
      "メカジキ",
      "モクズガニ",
      "ヤイトハタ",
      "ヤリイカ",
      "ヨコスジフエダイ",
      "リュウキュウハタ",
      "レンコダイ",
      "アカエイ",
      "アカハタ",
      "アカムツ",
      "イカナゴ",
      "イトヒキアジ",
      "ウグイ",
      "エゾイソアイナメ",
      "オキアジ",
      "カイワリ",
      "カゴシマイサキ",
      "キタノホッケ",
      "クロサギ",
      "クロホシイシモチ",
      "コブダイ",
      "サゴシ",
      "サワラ",
      "シロギス",
      "ショウサイフグ",
      "ソウダガツオ",
      "ツムブリ",
      "ナマズ",
      "ネズミゴチ",
      "ヒゲダイ",
      "ヒメダイ",
      "マハタ",
      "マトウダイ",
      "ムロアジ",
      "モンガラカワハギ",
      "ヤガラ",
      "ユウタウナギ",
      "ヨロイアジ",
      "リュウグウノツカイ",
      "ルアチヌ",
      "ロウニンアジ",
      "ワラサ"
    ].freeze

    class << self
      def load
        FISHES.each do |fish_name|
          Fish.find_or_create_by!(
            name: fish_name
          )
        end
      end
    end
  end
end
